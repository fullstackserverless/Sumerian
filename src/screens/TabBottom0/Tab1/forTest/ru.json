[
  {
    "id": "0",
    "title": "Какой URL (адрес) необходимо ввести в адресную строку Chrome, чтобы открыть полностью пустую вкладку браузера?",
    "answer": "about:blank",
    "random": ["about:blank", "about:add", "about:new"]
  },
  {
    "id": "1",
    "title": "Какое сочетание клавиш открывает консоль в Chrome?",
    "answer": "CTRL+SHIFT+J (COMMAND+OPTION+J для Mac).",
    "random": [
      "CTRL+SHIFT+J (COMMAND+OPTION+J для Mac).",
      "CTRL+SHIFT+C (COMMAND+OPTION+C для Mac).",
      "CTRL+SHIFT+K (COMMAND+OPTION+K для Mac)."
    ]
  },
  {
    "id": "2",
    "title": "Какие два ключевых слова, которые мы показали, можно использовать для объявления новой переменной?",
    "answer": "let и var",
    "random": ["let и var", "const и var", "let и const"]
  },
  {
    "id": "3",
    "title": "Какой символ означает деление на при написании кода?",
    "answer": "/",
    "random": ["/", "$", "\\"]
  },
  {
    "id": "4",
    "title": "Что вы должны указать на пустом месте в этом блоке кода? \nconst hats = ['cowboy', 'bowler', 'chef', 'top']\n for (let p = 0; p < ________; p++) {\n    console.log('I like to wear a ' + hats[p] + ' hat.')\n }",
    "answer": "hats.length",
    "random": ["hats.length", "hats", "length"]
  },
  {
    "id": "5",
    "title": "Какого рода ошибку вы получите, если попытаетесь запустить этот оператор? \nlet sum = (9 + ; 3)",
    "answer": "SyntaxError (здесь неожиданно появился ';'. Его следовало переместить в правую часть закрывающей скобки).",
    "random": [
      "SyntaxError (здесь неожиданно появился ';'. Его следовало переместить в правую часть закрывающей скобки).",
      "undefined",
      "11;"
    ]
  },
  {
    "id": "6",
    "title": "Какой вид заглавных букв (т.е. регистр) следует использовать в именах переменных в JavaScript?",
    "answer": "camelCase",
    "random": ["camelCase", "case", "camel"]
  },
  {
    "id": "7",
    "title": "Всякий раз, когда у вас есть открывающая ___, вам всегда нужно иметь закрывающую ___.",
    "answer": "кавычка",
    "random": ["кавычка", "точка", "переменая"]
  },
  {
    "id": "8",
    "title": "Это допустимый синтаксис JavaScript? Если нет, то почему? let myMood = \"Curious about JavaScript\" \n let myMood = \"Excited to use my new superpowers\"\n myMood",
    "answer": "Недействительно, потому что во второй строке не должно быть ключевого слова let.",
    "random": [
      "Недействительно, потому что во второй строке не должно быть ключевого слова let.",
      "Действительно",
      "SyntaxError"
    ]
  },
  {
    "id": "9",
    "title": "Что означает один знак равенства в утверждении?",
    "answer": "Назначение - значение присваивается переменной (пример: let myAge = 10)",
    "random": ["Назначение - значение присваивается переменной (пример: let myAge = 10)", "Сравнить", "Равенство"]
  },
  {
    "id": "10",
    "title": "Что означает символ '+' при выполнении математических операций в JavaScript?",
    "answer": "Знак плюс означает сложение - сложение чисел",
    "random": [
      "Знак плюс означает сложение - сложение чисел",
      "Конкатенация",
      "Назначение - значение присваивается переменной (пример: let myAge = 10)"
    ]
  },
  {
    "id": "11",
    "title": "Какой символ используется в JavaScript для умножения?",
    "answer": "*",
    "random": ["*", "x", "%"]
  },
  {
    "id": "12",
    "title": "Какой это тип данных? 302",
    "answer": "Number",
    "random": ["Number", "String", "Integer"]
  },
  {
    "id": "13",
    "title": "Что означает символ '/' при выполнении математических операций в JavaScript?",
    "answer": "Косая черта обозначает деление - деление одного числа на другое.",
    "random": [
      "Косая черта обозначает деление - деление одного числа на другое.",
      "Косая черта указывает на умножение - умножение одного числа на другое.",
      "Это не символ математических операций."
    ]
  },
  {
    "id": "14",
    "title": "Каков тип данных переменной whatTypeAmI после выполнения этого оператора? \n let whatTypeAmI = 5",
    "answer": "Number",
    "random": ["Number", "String", "Integer"]
  },
  {
    "id": "15",
    "title": "Какой специальный символ вы могли бы использовать, чтобы упростить это задание? \n myVariable = myVariable * 2",
    "answer": "*= (myVariable *= 2)",
    "random": ["*= (myVariable *= 2)", "=* (myVariable =* 2)", "* (myVariable * 2)"]
  },
  {
    "id": "16",
    "title": "Какой символ используется для обозначения модуля(остаток от деления) в JavaScript?",
    "answer": "% (знак процента)",
    "random": ["% (знак процента)", "$ (знак доллара)", "& (знак амперсанда)"]
  },
  {
    "id": "17",
    "title": "Каков самый простой (то есть самый короткий) способ записать это (используя специальный символ)? Как называется специальный символ?\n myVariable = myVariable + 1",
    "answer": "myVariable ++ (оператор инкремент)",
    "random": ["myVariable ++ (оператор инкремент)", "+ (оператор инкремент)", "++ (оператор декремент)"]
  },
  {
    "id": "18",
    "title": "Каков самый простой (то есть самый короткий) способ записать это (используя специальный символ)? Как называется специальный символ? \n myVariable = myVariable - 1",
    "answer": "myVariable-- (оператор декремент)",
    "random": ["myVariable-- (оператор декремент)", "myVariable ++ (оператор инкремент)", "+ (оператор инкремент)"]
  },
  {
    "id": "19",
    "title": "Как бы вы изменили это выражение, чтобы оно говорило 'втрое больше суммы 4 плюс 1' (Подсказка: ответ должен быть 15 при запуске в консоли)? \n 3 * 4 + 1",
    "answer": "3*(4+1)",
    "random": ["3*(4+1)", "(3*4)+1", "3*4+1"]
  },
  {
    "id": "20",
    "title": "Если бы вы писали программу для определения четности или нечетности значения, какое число вы бы использовали после оператора по модулю?",
    "answer": "2",
    "random": ["2", "4", "0"]
  },
  {
    "id": "21",
    "title": "Какой специальный символ вы могли бы использовать, чтобы упростить это задание?\n myValue = myValue - 8",
    "answer": "-= (myValue -= 8)",
    "random": ["-= (myValue -= 8)", "- (myValue - 8)", "=- (myValue =- 8)"]
  },
  {
    "id": "22",
    "title": "Сколько уникальных (т.e. различных) значений вы могли бы получить, если бы выполнили длинную серию целочисленных операций, которые все закончились по \"модулю 5\" (пример: 11% 5; 12% 5; 13% 5 и т.д.)?",
    "answer": "5 разных значений (0, 1, 2, 3, or 4)",
    "random": ["5 разных значений (0, 1, 2, 3, or 4)", "4 разных значений (0, 1, 2, or 3)", "0 значений (0)"]
  },
  {
    "id": "23",
    "title": "Каково собирательное имя символов, которые сначала выполняют операцию с переменной, а затем присваивают новое значение той же переменной (например, +=, -=, *= и /=)?",
    "answer": "Комбинированое присвоение",
    "random": ["Комбинированое присвоение", "", "Математическое присвоение"]
  },
  {
    "id": "24",
    "title": "Комментарии в коде предназначены для чтения ____.",
    "answer": "Человека",
    "random": ["Человека", "Интерпретатора JavaScript", "console"]
  },
  {
    "id": "25",
    "title": "Какой тип данных, возможно, является наиболее часто используемым типом данных в JavaScript?",
    "answer": "string",
    "random": ["string", "number", "null"]
  },
  {
    "id": "26",
    "title": "Интерпретатор JavaScript ____ любые найденные комментарии.",
    "answer": "игнорирует",
    "random": ["игнорирует", "выполняет", "компилирует"]
  },
  {
    "id": "27",
    "title": "Какой символ обозначает однострочный комментарий?",
    "answer": "//",
    "random": ["//", "\\", "||"]
  },
  {
    "id": "28",
    "title": "Какая комбинация клавиш используется для возврата к перерыву при наборе текста в консоли?",
    "answer": "SHIFT+ENTER",
    "random": ["SHIFT+ENTER", "SHIFT+/", "SHIFT+ESC"]
  },
  {
    "id": "29",
    "title": "Строка JavaScript обычно окружена _____.",
    "answer": "кавычками (одинарные или двойные кавычки)",
    "random": ["кавычками (одинарные или двойные кавычки)", "одинарными кавычками", "двойными кавычками"]
  },
  {
    "id": "30",
    "title": "Какие символы необходимо ввести, чтобы начать комментарий блока?",
    "answer": "/*",
    "random": ["/*", "*\\", "//"]
  },
  {
    "id": "31",
    "title": "Какие символы обозначают конец комментария блока?",
    "answer": "*/",
    "random": ["*/", "*\\", "//"]
  },
  {
    "id": "32",
    "title": "При работе со строками, как правило, гораздо лучше использовать двойные кавычки, чем одинарные.",
    "answer": "false",
    "random": ["false", "true"]
  },
  {
    "id": "33",
    "title": "Строка состоит из одного или нескольких отдельных ___.",
    "answer": "символов",
    "random": ["символов", "аргументов", "параметров"]
  },
  {
    "id": "34",
    "title": "Что означает символ \"+ \" при работе со строками в JavaScript?",
    "answer": "конкатенация",
    "random": ["конкатенация", "дополнение", "сложение"]
  },
  {
    "id": "35",
    "title": "Какой единственный символ вы можете добавить в этот оператор, чтобы избежать синтаксической ошибки?\n let movieQuote = 'The name's Bond. James Bond.'",
    "answer": "Добавьте '\\' перед апострофом: 'The name\\'s Bond. James Bond.'",
    "random": [
      "Добавьте '\\' перед апострофом: 'The name\\'s Bond. James Bond.'",
      "Добавьте '/' перед апострофом: 'The name/'s Bond. James Bond.'"
    ]
  },
  {
    "id": "36",
    "title": "Как вы можете изменить (не добавить) два существующих символа в этой следующей строке, чтобы избежать синтаксической ошибки?\n let differentMovieQuote = 'Here's looking at you, kid.'",
    "answer": "Измените одинарные кавычки на двойные: \"Here's looking at you, kid.\"",
    "random": [
      "Измените одинарные кавычки на двойные: \"Here's looking at you, kid.\"",
      "Измените одинарные кавычки на двойные: 'Here's looking at you, kid.'"
    ]
  },
  {
    "id": "37",
    "title": "Как называется отдельный блок кода, который можно вызвать для выполнения конкретной задачи?",
    "answer": "function",
    "random": ["function", "состояние", "кавычки"]
  },
  {
    "id": "38",
    "title": "Какие символы окружают тело функции?",
    "answer": "Фигурные скобки {и}",
    "random": ["Фигурные скобки {и}", "()", "=>"]
  },
  {
    "id": "39",
    "title": "После создания функции я смогу использовать ее позже. Вызов функции называется ____ функцией.",
    "answer": "вызовом",
    "random": ["вызовом", "запуском", "стартом"]
  },
  {
    "id": "40",
    "title": "Какие заглавные буквы следует использовать для имен функций?",
    "answer": "camelCase",
    "random": ["camelCase", "case", "camel"]
  },
  {
    "id": "41",
    "title": "Какая часть функции отправляет что-то обратно при вызове функции?",
    "answer": "return",
    "random": ["return", "=>", "{}"]
  },
  {
    "id": "42",
    "title": "В верхней части объявления функции могут быть имена переменных (называемые _______) внутри скобок. При вызове этой функции значения (называемые _______) могут быть переданы для присвоения этим переменным.",
    "answer": "параметры / аргументы",
    "random": ["параметры / аргументы", "аргументы / параметры"]
  },
  {
    "id": "43",
    "title": "Какая аббревиатура используется для описания намерения хороших разработчиков избегать повторения подобных блоков кода снова и снова?",
    "answer": "D.R.Y. (Don't Repeat Yourself - Не повторяйся)",
    "random": ["D.R.Y. (Don't Repeat Yourself - Не повторяйся)", "R.Y. (Repeat Yourself - Повторить себя)"]
  },
  {
    "id": "44",
    "title": "Какая из четырех встроенных функций, обсуждаемых в этой главе, вероятно, раздражает пользователей, если они сталкиваются с ней несколько раз на веб-сайте?",
    "answer": "alert()",
    "random": ["alert()", "console.log()"]
  },
  {
    "id": "45",
    "title": "Если в функцию передается несколько значений, какой символ используется для их разделения?",
    "answer": ",",
    "random": [".", ",", "/"]
  },
  {
    "id": "46",
    "title": "Какая встроенная функция подходит для отправки секретных сообщений разработчикам (или себе во время отладки собственного веб-сайта), которые пользователи, вероятно, не увидят?",
    "answer": "console.log()",
    "random": ["console.log()", "alert()", "congirm()"]
  },
  {
    "id": "47",
    "title": "Даже если функция не принимает входных данных, какие символы ей все равно нужны, чтобы использовать?",
    "answer": "()",
    "random": ["()", "{}", "=>"]
  },
  {
    "id": "48",
    "title": "Встроенная функция рандомизации возвращает значение больше ___, но меньше ___.",
    "answer": "0 и 1(Math.random())",
    "random": ["0 и 1(Math.random())", "1 и 0(Math.random())", "0 и 100(Math.random())"]
  },
  {
    "id": "49",
    "title": "Какая встроенная функция округляет любое число до ближайшего целого?",
    "answer": "Math.floor()",
    "random": ["Math.floor()", "Math.max()", "Math.random()"]
  },
  {
    "id": "50",
    "title": "Функция может быть заключена в другую функцию.",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "51",
    "title": "При оценке вызовов вложенных функций интерпретатор будет оценивать их изнутри.",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "52",
    "title": "Какая клавиша на клавиатуре используется для отступа вашего кода (например, внутри тела функции)?",
    "answer": "TAB",
    "random": ["TAB", "ESC", "ENTER"]
  },
  {
    "id": "53",
    "title": "Что вы набираете, чтобы создать новую строку в консоли?",
    "answer": "\n",
    "random": ["\n", "/n", "//"]
  },
  {
    "id": "54",
    "title": "Как называется примитивный тип данных, который всегда должен иметь одно из двух значений: true или false?",
    "answer": "boolean",
    "random": ["boolean", "bool", "null"]
  },
  {
    "id": "55",
    "title": "Какой символ у оператора сравнения, который проверяет, меньше ли значение с левой стороны, чем значение с правой стороны?",
    "answer": "< ('меньше чем')",
    "random": ["< ('меньше чем')", "> ('больше чем')", "= ('равный')"]
  },
  {
    "id": "56",
    "title": "\"This one's tricky.\" !== 'This one's tricky.'",
    "answer": "false",
    "random": ["false", "true"]
  },
  {
    "id": "57",
    "title": "Какой оператор сравнения предпочтительнее для проверки - значения не равны?",
    "answer": "!==",
    "random": ["!==", "===", "!"]
  },
  {
    "id": "58",
    "title": "Какие два оператора сравнения рекомендуют не использовать в коде?",
    "answer": "== и !=",
    "random": ["== и !=", "> и <", "=> и <="]
  },
  {
    "id": "59",
    "title": "Какой оператор сравнения проверяет, меньше ли значение справа или равно значению слева?",
    "answer": ">=",
    "random": [">=", "<=", "=>"]
  },
  {
    "id": "60",
    "title": "Какие общие инструкции в кодировании используются для выполнения определенных блоков кода на основе заданного условия?",
    "answer": "условное выражение",
    "random": ["условное выражение", "логическое выражение", "разные выражения"]
  },
  {
    "id": "61",
    "title": "Какого рода оператор запускается только тогда, когда условие для блока if принимает значение false?",
    "answer": "else",
    "random": ["else", "if", "else if"]
  },
  {
    "id": "62",
    "title": "Операторы сравнения всегда дают значение true или false.",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "63",
    "title": "Операторы сравнения часто используются внутри блока if.",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "64",
    "title": "Иногда внутри оператора else можно использовать операторы сравнения.",
    "answer": "false",
    "random": ["false", "true"]
  },
  {
    "id": "65",
    "title": "Оператор if / else может использоваться только вне функции.",
    "answer": "false",
    "random": ["false", "true"]
  },
  {
    "id": "66",
    "title": "Как называется примитивный тип данных, который означает, что никакое другое значение не было присвоено?",
    "answer": "undefined",
    "random": ["undefined", "null", "boolean"]
  },
  {
    "id": "67",
    "title": "Подобно операторам сравнения, операторы _____ (&&, || и!) Отлично работают в условных операторах.",
    "answer": "логики",
    "random": ["логики", "условия", "сравнения"]
  },
  {
    "id": "68",
    "title": "Как называется примитивный тип данных, который в основном ничего не означает (не ноль, не пустая строка, не неопределенный, не ложный и т.д.)?",
    "answer": "null",
    "random": ["null", "undefined", "boolean"]
  },
  {
    "id": "69",
    "title": "Если определение функции имеет четыре параметра, но передается только два аргумента, какие значения получают третий и четвертый параметры?",
    "answer": "undefined",
    "random": ["undefined", "null", "true"]
  },
  {
    "id": "70",
    "title": "Как называется логический оператор, который будет возвращать ложное значение только в том случае, если он имеет ложные значения с обеих сторон? Какой символ у этого логического оператора?",
    "answer": "||",
    "random": ["||", "&&", "!"]
  },
  {
    "id": "71",
    "title": "Сколько возможных значений для нулевого типа данных?",
    "answer": "1 возможное значение (null)",
    "random": ["1 возможное значение (null)", "2 возможных значения (null, undefined)"]
  },
  {
    "id": "72",
    "title": "53 >= 53 && !(51 <= 52)",
    "answer": "false",
    "random": ["false", "true"]
  },
  {
    "id": "73",
    "title": "Если условие в скобках блока if возвращает ложь, какой синтаксис можно использовать для проверки другого условия перед преобразованием в блок else?",
    "answer": "else if",
    "random": ["else if", "if", "else"]
  },
  {
    "id": "74",
    "title": "Как называется единственный логический оператор, который всегда возвращает логическое значение? Какой символ у этого логического оператора?",
    "answer": "!",
    "random": ["!", "||", "&&"]
  },
  {
    "id": "75",
    "title": "Любое, каждое значение в JavaScript можно считать правдивым или ложным?",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "76",
    "title": "Как называется логический оператор, который вернет истинное значение, если оно имеет истинное значение с обеих сторон? Какой символ у этого логического оператора?",
    "answer": "||",
    "random": ["||", "&&", "!"]
  },
  {
    "id": "77",
    "title": "true || false",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "78",
    "title": "false || (true && false)",
    "answer": "false",
    "random": ["false", "true"]
  },
  {
    "id": "79",
    "title": "null и undefined являются ложными значениями.",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "80",
    "title": "Как называется логический оператор, который вернет ложное значение, если он имеет ложное значение с обеих сторон? Какой символ у этого логического оператора?",
    "answer": "&&",
    "random": ["&&", "||", "!"]
  },
  {
    "id": "81",
    "title": "null || false !== undefined",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "82",
    "title": "Каково значение myMessage после этой строки? \nlet myMessage",
    "answer": "undefined",
    "random": ["undefined", "null", "SyntaxError"]
  },
  {
    "id": "83",
    "title": "Сколько возможных значений существует для неопределенного типа данных?",
    "answer": "1 возможное значение (undefined)",
    "random": ["1 возможное значение (undefined)", "2 возможных значения (undefined, null)"]
  },
  {
    "id": "84",
    "title": "(null || false) || ((0 || true) || undefined)",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "85",
    "title": "Какое значение имеет imFeeling после этой строки?\n var imFeeling = !'sure' || !!'confused'",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "86",
    "title": "Как называется логический оператор, который будет возвращать правдивость только в том случае, если он имеет правдивые значения с обеих сторон? Какой символ у этого логического оператора?",
    "answer": "&&",
    "random": ["&&", "||", "!"]
  },
  {
    "id": "87",
    "title": "Значения null, false, '', 0 и undefined - все ____, тогда как true, 'string' и 1 - все ___ значения.",
    "answer": "falsy / truthy",
    "random": ["falsy / truthy", "truthy / falsy"]
  },
  {
    "id": "88",
    "title": "Какое значение имеет значение theGreatestOfThese после этой строки?\n var theGreatestOfThese = 'faith' && 'hope' && 'love'",
    "answer": "love",
    "random": ["love", "faith", "true"]
  },
  {
    "id": "89",
    "title": "В JavaScript объект - это набор свойств (именованных значений).",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "90",
    "title": "Какой метод (функцию) вы можете использовать для преобразования строки в использование заглавных букв?",
    "answer": "toUpperCase()",
    "random": ["toUpperCase()", "toLowerCase()", "confirm()"]
  },
  {
    "id": "91",
    "title": "Какое ключевое слово следует использовать для создания любой переменной, которая, как вы знаете, не будет изменена?",
    "answer": "const",
    "random": ["const", "let", "var"]
  },
  {
    "id": "92",
    "title": "Когда следует использовать ключевое слово let в собственном коде?",
    "answer": "Когда вы знаете, что значение переменной может измениться.",
    "random": [
      "Когда вы знаете, что значение переменной может измениться.",
      "Когда вы знаете, что значение переменной не может измениться."
    ]
  },
  {
    "id": "93",
    "title": "Какие встроенные функции заставят интерпретатор JavaScript ждать, пока пользователь нажмет кнопку, прежде чем продолжить выполнение остальной части кода?",
    "answer": "confirm(), prompt(), and alert()",
    "random": ["confirm(), prompt(), and alert()", "none", "console.log()"]
  },
  {
    "id": "94",
    "title": "Какой термин относится к коду, который имеет полезные имена переменных и описательных имен функций, чтобы разработчику было легко понять цель кода, когда он его читает (без особой необходимости в пояснительных комментариях)?",
    "answer": "Самодокументирование",
    "random": ["Самодокументирование", "Документирование", "Рукопись"]
  },
  {
    "id": "95",
    "title": "Какой метод можно использовать, чтобы преобразовать строку в использование только заглавных букв?",
    "answer": "toUpperCase()",
    "random": ["toLowerCase()", "toUpperCase()", "confirm()"]
  },
  {
    "id": "96",
    "title": "Когда следует использовать ключевое слово var в собственном коде?",
    "answer": "Никогда",
    "random": ["Никогда", "Всегда", "Часто"]
  },
  {
    "id": "97",
    "title": "Когда свойство объекта является функцией, оно носит специальное имя: \"mothered\".",
    "answer": "false. У него особое название: \"метод\"",
    "random": ["false. У него особое название: \"метод\"", "true", "false. У него особое название: \"класс\""]
  },
  {
    "id": "98",
    "title": "Какая встроенная функция заставит интерпретатор JavaScript ждать, пока пользователь введет информацию, прежде чем продолжить выполнение остальной части кода?",
    "answer": "prompt()",
    "random": ["prompt()", "confirm()", "alert()"]
  },
  {
    "id": "99",
    "title": "Какое ключевое слово вы, вероятно, будете чаще всего использовать для создания переменных?",
    "answer": "const",
    "random": ["const", "let", "var"]
  },
  {
    "id": "100",
    "title": "Функция prompt () всегда возвращает логическое значение.",
    "answer": "false. Он всегда возвращает строку (или null).",
    "random": ["false. Он всегда возвращает строку (или null).", "true"]
  },
  {
    "id": "101",
    "title": "Функции alert (), confirm () и prompt () широко используются профессионалами, поскольку они создают элегантный пользовательский интерфейс.",
    "answer": "false. Они создают неудобства для пользователя и блокируют выполнение остальной части кода. По этим причинам профессионалы больше не часто используют эти функции.",
    "random": [
      "false. Они создают неудобства для пользователя и блокируют выполнение остальной части кода. По этим причинам профессионалы больше не часто используют эти функции.",
      "true"
    ]
  },
  {
    "id": "102",
    "title": "Как называется в JavaScript список значений в определенном порядке?",
    "answer": "массив",
    "random": ["массив", "метод", "функция"]
  },
  {
    "id": "103",
    "title": "К чему относится .length массива?",
    "answer": "Количество элементов в массиве",
    "random": ["Количество элементов в массиве", "string", "boolean"]
  },
  {
    "id": "104",
    "title": "____ в массиве - это число, представляющее позицию любого заданного элемента в массиве.",
    "answer": "индекс",
    "random": ["индекс", "длина", "функция"]
  },
  {
    "id": "105",
    "title": "Какое значение следует поместить в квадратные скобки, чтобы получить первый элемент в массиве? \n myArray[ ]",
    "answer": "0",
    "random": ["0", "1", "2"]
  },
  {
    "id": "106",
    "title": "Массив может содержать смесь разных типов данных.",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "107",
    "title": "Какой встроенный метод можно использовать для добавления нового элемента в конец массива?",
    "answer": ".push()",
    "random": [".push()", ".pop()", ".shift()"]
  },
  {
    "id": "108",
    "title": "При использовании myArray.toString () в массиве возвращаемое значение будет строкой, включающей все элементы из массива, разделенные точкой с запятой.",
    "answer": "false. Возвращаемое значение будет строкой, включающей все элементы, разделенные запятыми.",
    "random": ["false. Возвращаемое значение будет строкой, включающей все элементы, разделенные запятыми.", "true"]
  },
  {
    "id": "109",
    "title": "Использование метода .pop () для массива будет _____ и _____ последний элемент массива.",
    "answer": "удалять / возвращать",
    "random": ["удалять / возвращать", "возвращать / удалять"]
  },
  {
    "id": "110",
    "title": "После запуска этого кода массив учебников будет иметь длину 4. \n const textbooks = ['english', 'biology'] \n textbooks.concat(['math', 'spanish'])",
    "answer": "false. Массив учебников не изменится. Он по-прежнему будет иметь длину 2.",
    "random": ["false. Массив учебников не изменится. Он по-прежнему будет иметь длину 2.", "true"]
  },
  {
    "id": "111",
    "title": "Какой термин относится к практике многократного вызова одного метода за другим для объекта в одной непрерывной строке кода?",
    "answer": "цепочка",
    "random": ["цепочка", "шаг", "поток"]
  },
  {
    "id": "112",
    "title": "Ответьте на этот вопрос, прежде чем тестировать его в консоли: каков будет результат этого кода? \n const sewingSupplies = ['thread', 'needle', 'thimble']\n sewingSupplies.sort()[1]",
    "answer": "thimble",
    "random": ["thimble", "thread", "needle"]
  },
  {
    "id": "113",
    "title": "При использовании myArray.join (\"\n\") в массиве строка \"\n\" известна как разделитель: строка, которая будет проходить между каждым элементом массива.",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "114",
    "title": "Метод .unshift() может использоваться для добавления элемента в начало массива, в то время как метод ____ удаляет элемент из начала массива.",
    "answer": ".shift()",
    "random": [".shift()", ".pop()", ".push()"]
  },
  {
    "id": "115",
    "title": "Какое значение будет возвращено из следующей строки?\n const hairProducts = ['shampoo', 'hairspray', 'gel']\n const myFaveProductIndex = 2 \n hairProducts[myFaveProductIndex]",
    "answer": "gel",
    "random": ["gel", "shampoo", "hairspray"]
  },
  {
    "id": "116",
    "title": "При использовании myArray.join ('или') в массиве возвращаемое значение будет новым массивом, который включает все элементы из исходного массива, разделенные строкой \"или\".",
    "answer": "false. Возвращаемое значение будет строкой, включающей все элементы исходного массива, разделенные строкой \"или\".",
    "random": [
      "false. Возвращаемое значение будет строкой, включающей все элементы исходного массива, разделенные строкой \"или\".",
      "true"
    ]
  },
  {
    "id": "117",
    "title": "Что будет в результате этого кода?\n['D', 'C', 'A', 'B'].toString().toLowerCase().split(',').sort()[3]",
    "answer": "d",
    "random": ["d", "b", "c"]
  },
  {
    "id": "118",
    "title": "На техническом уровне метод .join () на самом деле не преобразует массив в строку, а скорее создает новую строку на основе значений из массива.",
    "answer": "true",
    "random": ["true", "false"]
  },
  {
    "id": "119",
    "title": "Как называется блок кода, который будет повторяться снова и снова, пока какое-то условие остается верным?",
    "answer": "loop",
    "random": ["loop", "while", "if else"]
  },
  {
    "id": "120",
    "title": "Какое слово вы могли бы вставить в пустое место в этом блоке кода?\nlet i = 0\n _____ (i < 5) { \nconsole.log(i) \n i++\n}",
    "answer": "while",
    "random": ["while", "for", "if"]
  },
  {
    "id": "121",
    "title": "Из двух видов циклов, которые мы обсуждали в этой главе, какой чаще всего используется для массивов?",
    "answer": "for",
    "random": ["for", "while"]
  },
  {
    "id": "122",
    "title": "Ваш код может попасть в бесконечную _____, если _____ всегда остается правдой.",
    "answer": "петля / условие",
    "random": ["петля / условие", "условие / петля"]
  },
  {
    "id": "123",
    "title": "Сколько отдельных сообщений (строк) будет записано в консоль с помощью этого кода?\nconst countyNums = [1, 2, 3, 5, 6]\nfor (let j = 0; j < countyNums.length; j++) {\nconsole.log(j + ' => ' + countyNums[j]) \n}",
    "answer": "5",
    "random": ["5", "6", "4"]
  },
  {
    "id": "124",
    "title": "Когда решение или стиль не требуется, но это общепринятая практика в отрасли, мы называем это  ________.",
    "answer": "соглашение",
    "random": ["соглашение", "закон", "правила"]
  },
  {
    "id": "125",
    "title": "Сколько отдельных сообщений (строк) будет записано в консоль с помощью этого кода?let k = 0\n while (k < 7) {\nconsole.log('line!')\n}",
    "answer": "Infinite! нет инкрементора, поэтому код попадет в бесконечный цикл!",
    "random": ["Infinite! нет инкрементора, поэтому код попадет в бесконечный цикл!", "6", "7"]
  },
  {
    "id": "126",
    "title": "Какой символ используется для разделения каждого из трех разделов внутри родительского цикла for?",
    "answer": ";",
    "random": [";", ",", "."]
  },
  {
    "id": "127",
    "title": "Как называется средний из трех разделов внутри родительского цикла for?",
    "answer": "состояние",
    "random": ["состояние", "соглашение", "цикл"]
  },
  {
    "id": "128",
    "title": "Сколько отдельных сообщений (строк) будет записано в консоль с помощью этого кода?\nconst maxCounter = 17\n let n = 0\nwhile (n <= maxCounter) {\nconsole.log('count it! ' + n)\nn++\n }",
    "answer": "18 (помните, что он начинается с 0)",
    "random": ["18 (помните, что он начинается с 0)", "17", "0"]
  },
  {
    "id": "129",
    "title": "Какое слово относится к единственному проходу зацикленного блока кода?",
    "answer": "итерация",
    "random": ["итерация", "состояние", "соглашение"]
  }
]
