type Profile @model @auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  avatar: S3Object
  owner: String
}

type EnglishProg @model @auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  doneId: String!
  owner: String
}

type S3Object {
  bucket: String!
  region: String!
  key: String!
}

type English @model @auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  title: String!
  description: String!
  img: String!
  uri: String!
  json: String
  owner: String
}

type JavaScript @model @auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  title: String!
  description: String!
  img: String!
  uri: String!
  json: String
  owner: String
}

type ReactNative @model @auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  title: String!
  description: String!
  img: String!
  uri: String!
  json: String
  owner: String
}

type TypeScript @model @auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  title: String!
  description: String!
  img: String!
  uri: String!
  json: String
  owner: String
}

type Amplify @model @auth(rules: [{ allow: owner, ownerField: "owner", operations: [create, update, delete] }]) {
  id: ID!
  title: String!
  description: String!
  img: String!
  uri: String!
  json: String
  owner: String
}
